# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Manager(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, domain_name: str=None, user_email: str=None):  # noqa: E501
        """Manager - a model defined in Swagger

        :param domain_name: The domain_name of this Manager.  # noqa: E501
        :type domain_name: str
        :param user_email: The user_email of this Manager.  # noqa: E501
        :type user_email: str
        """
        self.swagger_types = {
            'domain_name': str,
            'user_email': str
        }

        self.attribute_map = {
            'domain_name': 'domain_name',
            'user_email': 'user_email'
        }

        self._domain_name = domain_name
        self._user_email = user_email

    @classmethod
    def from_dict(cls, dikt) -> 'Manager':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The manager of this Manager.  # noqa: E501
        :rtype: Manager
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_name(self) -> str:
        """Gets the domain_name of this Manager.


        :return: The domain_name of this Manager.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name: str):
        """Sets the domain_name of this Manager.


        :param domain_name: The domain_name of this Manager.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def user_email(self) -> str:
        """Gets the user_email of this Manager.


        :return: The user_email of this Manager.
        :rtype: str
        """
        return self._user_email

    @user_email.setter
    def user_email(self, user_email: str):
        """Sets the user_email of this Manager.


        :param user_email: The user_email of this Manager.
        :type user_email: str
        """

        self._user_email = user_email
